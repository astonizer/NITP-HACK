{"ast":null,"code":"import * as actionTypes from '../constants/foodConstants';\nimport axios from 'axios';\nexport const getFoods = () => async dispatch => {\n  try {\n    dispatch({\n      type: actionTypes.GET_FOODS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('api/foods');\n    dispatch({\n      type: actionTypes.GET_FOODS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_FOODS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getFoodDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`api/foods/${id}`);\n    dispatch({\n      type: actionTypes.GET_FOODS_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_FOODS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const removeFoodDetails = () => dispatch => {\n  dispatch({\n    type: actionTypes.GET_FOODS_DETAILS_RESET\n  });\n};","map":{"version":3,"sources":["C:/Users/HP PC/Desktop/NITPHACKATHON/frontend/foodmania/src/redux/actions/foodActions.js"],"names":["actionTypes","axios","getFoods","dispatch","type","GET_FOODS_REQUEST","data","get","GET_FOODS_SUCCESS","payload","error","GET_FOODS_FAIL","response","message","getFoodDetails","id","GET_PRODUCT_DETAILS_REQUEST","GET_FOODS_DETAILS_SUCCESS","removeFoodDetails","GET_FOODS_DETAILS_RESET"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAC,MAAI,MAAMC,QAAN,IAAiB;AACvC,MAAG;AACAA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACJ,WAAW,CAACK;AAAlB,KAAD,CAAR;AAEA,UAAM;AAACC,MAAAA;AAAD,QAAQ,MAAML,KAAK,CAACM,GAAN,CAAU,WAAV,CAApB;AAEAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACJ,WAAW,CAACQ,iBADZ;AAELC,MAAAA,OAAO,EAACH;AAFH,KAAD,CAAR;AAIF,GATD,CAUA,OAAMI,KAAN,EAAY;AACRP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACJ,WAAW,CAACW,cADZ;AAELF,MAAAA,OAAO,EAACC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GACNH,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OADd,GAEPH,KAAK,CAACG;AAJF,KAAD,CAAR;AAMH;AACJ,CAnBM;AAsBP,OAAO,MAAMC,cAAc,GAAEC,EAAD,IAAM,MAAMZ,QAAN,IAAiB;AAC/C,MAAG;AACAA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACJ,WAAW,CAACgB;AAAlB,KAAD,CAAR;AAEA,UAAM;AAACV,MAAAA;AAAD,QAAQ,MAAML,KAAK,CAACM,GAAN,CAAW,aAAYQ,EAAG,EAA1B,CAApB;AAEAZ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACJ,WAAW,CAACiB,yBADZ;AAELR,MAAAA,OAAO,EAACH;AAFH,KAAD,CAAR;AAIF,GATD,CAUA,OAAMI,KAAN,EAAY;AACRP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACJ,WAAW,CAACW,cADZ;AAELF,MAAAA,OAAO,EAACC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GACNH,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OADd,GAEPH,KAAK,CAACG;AAJF,KAAD,CAAR;AAMH;AACJ,CAnBM;AAsBP,OAAO,MAAMK,iBAAiB,GAAC,MAAKf,QAAD,IAAY;AAC3CA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACJ,WAAW,CAACmB;AADZ,GAAD,CAAR;AAMH,CAPM","sourcesContent":["import * as actionTypes from '../constants/foodConstants';\r\nimport axios from 'axios';\r\n\r\nexport const getFoods=()=>async(dispatch)=>{\r\n    try{\r\n       dispatch({type:actionTypes.GET_FOODS_REQUEST});\r\n\r\n       const {data} =await axios.get('api/foods');\r\n\r\n       dispatch({\r\n           type:actionTypes.GET_FOODS_SUCCESS,\r\n           payload:data,\r\n       })\r\n    }  \r\n    catch(error){\r\n        dispatch({\r\n            type:actionTypes.GET_FOODS_FAIL,\r\n            payload:error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            :error.message,\r\n        }); \r\n    }\r\n};\r\n\r\n\r\nexport const getFoodDetails=(id)=>async(dispatch)=>{\r\n    try{\r\n       dispatch({type:actionTypes.GET_PRODUCT_DETAILS_REQUEST});\r\n\r\n       const {data} =await axios.get(`api/foods/${id}`);\r\n\r\n       dispatch({\r\n           type:actionTypes.GET_FOODS_DETAILS_SUCCESS,\r\n           payload:data,\r\n       })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:actionTypes.GET_FOODS_FAIL,\r\n            payload:error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            :error.message,\r\n        }); \r\n    }\r\n};\r\n\r\n\r\nexport const removeFoodDetails=()=>(dispatch)=>{\r\n    dispatch({\r\n        type:actionTypes.GET_FOODS_DETAILS_RESET,\r\n    });\r\n    \r\n    \r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}