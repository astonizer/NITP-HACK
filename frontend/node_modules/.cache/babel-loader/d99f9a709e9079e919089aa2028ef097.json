{"ast":null,"code":"import * as actionTypes from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      const item = action.payload;\n      const existItem = state.cardItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cardItems: state.cartItems.map(x => x.product === item.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cardItems: [...state.cardItems, item]\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cardItems: state.cardItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/HP PC/Desktop/NITPHACKATHON/frontend/foodmania/src/redux/reducers/cartReducers.js"],"names":["actionTypes","cartReducer","state","cartItems","action","type","ADD_TO_CART","item","payload","existItem","cardItems","find","x","product","map","REMOVE_FROM_CART","filter"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AAGA,OAAO,MAAMC,WAAW,IAAGC,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAC;AAAX,CAAN,EAAuBC,MAAM,IAAE;AACtD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,WAAW,CAACM,WAAjB;AACI,YAAMC,IAAI,GAACH,MAAM,CAACI,OAAlB;AAEA,YAAMC,SAAS,GAAGP,KAAK,CAACQ,SAAN,CAAgBC,IAAhB,CAAsBC,CAAD,IAAMA,CAAC,CAACC,OAAF,KAAcN,IAAI,CAACM,OAA9C,CAAlB;;AAGC,UAAGJ,SAAH,EACA;AACI,eAAO,EACH,GAAGP,KADA;AAEHQ,UAAAA,SAAS,EAACR,KAAK,CAACC,SAAN,CAAgBW,GAAhB,CAAqBF,CAAD,IAAMA,CAAC,CAACC,OAAF,KAAcN,IAAI,CAACM,OAAnB,GAA6BN,IAA7B,GAAoCK,CAA9D;AAFP,SAAP;AAIH,OAND,MAOI;AACA,eAAM,EACH,GAAGV,KADA;AAEHQ,UAAAA,SAAS,EAAC,CAAC,GAAGR,KAAK,CAACQ,SAAV,EAAoBH,IAApB;AAFP,SAAN;AAIH;;AACN,SAAKP,WAAW,CAACe,gBAAjB;AACI,aAAM,EACF,GAAGb,KADD;AAEFQ,QAAAA,SAAS,EAACR,KAAK,CAACQ,SAAN,CAAgBM,MAAhB,CAAwBJ,CAAD,IAAMA,CAAC,CAACC,OAAF,KAAaT,MAAM,CAACI,OAAjD;AAFR,OAAN;;AAOJ;AACI,aAAON,KAAP;AA7BR;AA+BH,CAhCuB,CAAjB","sourcesContent":["import * as actionTypes from '../constants/cartConstants';\r\n\r\n\r\nexport const cartReducer= (state={cartItems:[]} , action=>{\r\n    switch(action.type){\r\n        case actionTypes.ADD_TO_CART:\r\n            const item=action.payload;\r\n\r\n            const existItem = state.cardItems.find((x)=> x.product === item.product)\r\n\r\n             \r\n             if(existItem)\r\n             {\r\n                 return {\r\n                     ...state,\r\n                     cardItems:state.cartItems.map((x)=> x.product === item.product ? item : x )\r\n                 }\r\n             }\r\n             else{\r\n                 return{\r\n                    ...state,\r\n                    cardItems:[...state.cardItems,item]\r\n                 };\r\n             }\r\n        case actionTypes.REMOVE_FROM_CART:\r\n            return{\r\n                ...state,\r\n                cardItems:state.cardItems.filter((x)=> x.product !==action.payload),\r\n            };\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}